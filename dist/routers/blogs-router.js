"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.blogsRouter = void 0;
const express_1 = require("express");
const body_blog_validation_1 = require("../middlewares/body-blog-validation");
const input_validation_middleware_1 = require("../middlewares/input-validation-middleware");
const authorisation_middleware_1 = require("../middlewares/authorisation-middleware");
const body_post_validation_1 = require("../middlewares/body-post-validation");
const compostion_root_1 = require("../compostion-root");
const blogs_controller_1 = require("../controllers/blogs-controller");
const blogsController = compostion_root_1.container.resolve(blogs_controller_1.BlogsController);
exports.blogsRouter = (0, express_1.Router)({});
exports.blogsRouter.get('/', blogsController.getAllBlogs.bind(blogsController));
exports.blogsRouter.post('/', authorisation_middleware_1.authorisationMiddleware, body_blog_validation_1.bodyBlogValidation.name, body_blog_validation_1.bodyBlogValidation.description, body_blog_validation_1.bodyBlogValidation.websiteUrl, input_validation_middleware_1.inputValidationMiddleware, blogsController.createBlog.bind(blogsController));
exports.blogsRouter.get('/:blogId/posts', blogsController.getPostByBlogId.bind(blogsController));
exports.blogsRouter.post('/:blogId/posts', authorisation_middleware_1.authorisationMiddleware, body_post_validation_1.bodyPostValidation.title, body_post_validation_1.bodyPostValidation.shortDescription, body_post_validation_1.bodyPostValidation.content, input_validation_middleware_1.inputValidationMiddleware, blogsController.createPostForBlog.bind(blogsController));
exports.blogsRouter.get('/:id', blogsController.getBlogById.bind(blogsController));
exports.blogsRouter.put('/:id', authorisation_middleware_1.authorisationMiddleware, body_blog_validation_1.bodyBlogValidation.name, body_blog_validation_1.bodyBlogValidation.description, body_blog_validation_1.bodyBlogValidation.websiteUrl, input_validation_middleware_1.inputValidationMiddleware, blogsController.updateBlog.bind(blogsController));
exports.blogsRouter.delete('/:id', authorisation_middleware_1.authorisationMiddleware, blogsController.deleteBlogById.bind(blogsController));
