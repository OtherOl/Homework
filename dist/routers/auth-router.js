"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.authRouter = void 0;
const express_1 = require("express");
const input_validation_middleware_1 = require("../middlewares/input-validation-middleware");
const body_auth_validation_1 = require("../middlewares/body-auth-validation");
const auth_middleware_1 = require("../middlewares/auth-middleware");
const body_user_validation_1 = require("../middlewares/body-user-validation");
const tokens_middleware_1 = require("../middlewares/tokens-middleware");
const attempts_middleware_1 = require("../middlewares/attempts-middleware");
const compostion_root_1 = require("../compostion-root");
const auth_controller_1 = require("../controllers/auth-controller");
const authController = compostion_root_1.container.resolve(auth_controller_1.AuthController);
exports.authRouter = (0, express_1.Router)({});
exports.authRouter.post('/login', attempts_middleware_1.attemptsMiddleware, body_auth_validation_1.bodyAuthValidation.loginOrEmail, body_auth_validation_1.bodyAuthValidation.password, input_validation_middleware_1.inputValidationMiddleware, authController.login.bind(authController));
exports.authRouter.post('/password-recovery', attempts_middleware_1.attemptsMiddleware, body_user_validation_1.bodyUserValidation.email, input_validation_middleware_1.inputValidationMiddleware, authController.passwordRecovery.bind(authController));
exports.authRouter.post('/new-password', attempts_middleware_1.attemptsMiddleware, body_user_validation_1.bodyUserValidation.newPassword, body_user_validation_1.bodyUserValidation.recoveryCode, input_validation_middleware_1.inputValidationMiddleware, authController.newPassword.bind(authController));
exports.authRouter.post('/refresh-token', tokens_middleware_1.tokensMiddleware, authController.refreshToken.bind(authController));
exports.authRouter.post('/registration', attempts_middleware_1.attemptsMiddleware, body_user_validation_1.bodyUserValidation.login, body_user_validation_1.bodyUserValidation.email, body_user_validation_1.bodyUserValidation.password, input_validation_middleware_1.inputValidationMiddleware, authController.registration.bind(authController));
exports.authRouter.post('/registration-confirmation', attempts_middleware_1.attemptsMiddleware, authController.registrationConfirmation.bind(authController));
exports.authRouter.post('/registration-email-resending', attempts_middleware_1.attemptsMiddleware, body_user_validation_1.bodyUserValidation.email, input_validation_middleware_1.inputValidationMiddleware, authController.registrationEmailResending.bind(authController));
exports.authRouter.get('/me', auth_middleware_1.authMiddleware, authController.userInfo.bind(authController));
exports.authRouter.post('/logout', tokens_middleware_1.tokensMiddleware, authController.logout.bind(authController));
